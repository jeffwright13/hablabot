/* HablaBot - Animations and Transitions */

/* Keyframe Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -30px, 0);
  }
  70% {
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-5px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(5px);
  }
}

@keyframes glow {
  0% {
    box-shadow: 0 0 5px rgba(231, 76, 60, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba(231, 76, 60, 0.8);
  }
  100% {
    box-shadow: 0 0 5px rgba(231, 76, 60, 0.5);
  }
}

@keyframes typing {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

@keyframes blink {
  0%, 50% {
    opacity: 1;
  }
  51%, 100% {
    opacity: 0;
  }
}

/* Speaking Animation for AI */
@keyframes speakingWave {
  0%, 100% {
    transform: scaleY(0.4);
    opacity: 0.7;
  }
  50% {
    transform: scaleY(1);
    opacity: 1;
  }
}

.speaking-indicator .wave {
  animation: speakingWave 1.5s ease-in-out infinite;
}

.speaking-indicator .wave:nth-child(1) {
  animation-delay: 0s;
}

.speaking-indicator .wave:nth-child(2) {
  animation-delay: 0.2s;
}

.speaking-indicator .wave:nth-child(3) {
  animation-delay: 0.4s;
}

/* Listening Animation */
@keyframes listeningPulse {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.7;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.listening-indicator .pulse {
  animation: listeningPulse 1.5s ease-in-out infinite;
}

/* Processing Animation */
@keyframes processingDots {
  0%, 20% {
    color: var(--primary-color);
    transform: scale(1);
  }
  50% {
    color: var(--primary-dark);
    transform: scale(1.2);
  }
  100% {
    color: var(--primary-color);
    transform: scale(1);
  }
}

.processing-indicator::after {
  content: '...';
  animation: processingDots 1.5s ease-in-out infinite;
}

/* Button Hover Animations */
.btn-hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

.btn-hover-lift:active {
  transform: translateY(0);
  transition-duration: 0.1s;
}

/* Progress Bar Animation */
@keyframes progressFill {
  from {
    width: 0%;
  }
  to {
    width: var(--progress-width, 0%);
  }
}

.progress-fill {
  animation: progressFill 0.8s ease-out;
}

/* Toast Notification Animations */
.toast-enter {
  animation: slideInFromRight 0.3s ease-out;
}

.toast-exit {
  animation: fadeOut 0.3s ease-in;
}

/* Modal Animations */
.modal-overlay {
  animation: fadeIn 0.3s ease-out;
}

.modal-content {
  animation: scaleIn 0.3s ease-out;
}

/* View Transition Animations */
.view-enter {
  animation: fadeIn 0.4s ease-out;
}

.view-exit {
  animation: fadeOut 0.2s ease-in;
}

/* Loading States */
.loading-state {
  position: relative;
  overflow: hidden;
}

.loading-state::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.4),
    transparent
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Success/Error State Animations */
.success-animation {
  animation: bounce 0.6s ease-out;
}

.error-animation {
  animation: shake 0.6s ease-out;
}

/* Microphone Recording Animation */
.mic-recording {
  position: relative;
}

.mic-recording::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border: 2px solid var(--success-color);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: micPulse 2s infinite;
}

@keyframes micPulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0;
  }
}

/* Typing Indicator for AI Response */
.typing-indicator {
  display: inline-flex;
  align-items: center;
  gap: 4px;
}

.typing-indicator span {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: var(--gray-400);
  animation: typingDot 1.4s infinite ease-in-out;
}

.typing-indicator span:nth-child(1) {
  animation-delay: 0s;
}

.typing-indicator span:nth-child(2) {
  animation-delay: 0.2s;
}

.typing-indicator span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes typingDot {
  0%, 60%, 100% {
    transform: scale(1);
    opacity: 0.4;
  }
  30% {
    transform: scale(1.2);
    opacity: 1;
  }
}

/* Vocabulary Card Flip Animation */
.vocab-card {
  perspective: 1000px;
}

.vocab-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.vocab-card.flipped .vocab-card-inner {
  transform: rotateY(180deg);
}

.vocab-card-front,
.vocab-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  display: flex;
  align-items: center;
  justify-content: center;
}

.vocab-card-back {
  transform: rotateY(180deg);
  background-color: var(--primary-color);
  color: var(--white);
}

/* Statistics Counter Animation */
.stat-counter {
  animation: countUp 2s ease-out;
}

@keyframes countUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Conversation Message Animations */
.message {
  animation: messageSlideIn 0.4s ease-out;
}

.message.user {
  animation: messageSlideInRight 0.4s ease-out;
}

@keyframes messageSlideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes messageSlideInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Focus Ring Animation */
.focus-ring {
  position: relative;
}

.focus-ring:focus::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 2px solid var(--primary-color);
  border-radius: inherit;
  animation: focusRing 0.3s ease-out;
}

@keyframes focusRing {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Utility Classes for Animations */
.animate-fade-in {
  animation: fadeIn 0.3s ease-out;
}

.animate-fade-out {
  animation: fadeOut 0.3s ease-in;
}

.animate-slide-in-right {
  animation: slideInFromRight 0.3s ease-out;
}

.animate-slide-in-left {
  animation: slideInFromLeft 0.3s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.3s ease-out;
}

.animate-bounce {
  animation: bounce 0.6s ease-out;
}

.animate-shake {
  animation: shake 0.6s ease-out;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

/* Reduced Motion Overrides */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .loading-spinner,
  .speaking-indicator .wave,
  .listening-indicator .pulse,
  .mic-recording::before,
  .typing-indicator span {
    animation: none !important;
  }
}
